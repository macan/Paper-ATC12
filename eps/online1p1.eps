%!PS-Adobe-2.0 EPSF-2.0
%%Title: online1p1.eps
%%Creator: gnuplot 4.4 patchlevel 4
%%CreationDate: Wed Jan 04 08:54:12 2012
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 482 266
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (online1p1.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 4)
  /Author (caixia)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Jan 04 08:54:12 2012)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 482 50 lineto 482 266 lineto 50 266 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-New-Roman) findfont 200 scalefont setfont
1.000 UL
LTb
860 1040 M
63 0 V
stroke
740 1040 M
[ [(Times-New-Roman) 200.0 0.0 true true 0 (0K)]
] -66.7 MRshow
1.000 UL
LTb
860 1474 M
63 0 V
stroke
740 1474 M
[ [(Times-New-Roman) 200.0 0.0 true true 0 (10K)]
] -66.7 MRshow
1.000 UL
LTb
860 1908 M
63 0 V
stroke
740 1908 M
[ [(Times-New-Roman) 200.0 0.0 true true 0 (20K)]
] -66.7 MRshow
1.000 UL
LTb
860 2342 M
63 0 V
stroke
740 2342 M
[ [(Times-New-Roman) 200.0 0.0 true true 0 (30K)]
] -66.7 MRshow
1.000 UL
LTb
860 2777 M
63 0 V
stroke
740 2777 M
[ [(Times-New-Roman) 200.0 0.0 true true 0 (40K)]
] -66.7 MRshow
1.000 UL
LTb
860 3211 M
63 0 V
stroke
740 3211 M
[ [(Times-New-Roman) 200.0 0.0 true true 0 (50K)]
] -66.7 MRshow
1.000 UL
LTb
860 3645 M
63 0 V
stroke
740 3645 M
[ [(Times-New-Roman) 200.0 0.0 true true 0 (60K)]
] -66.7 MRshow
1.000 UL
LTb
860 4079 M
63 0 V
stroke
740 4079 M
[ [(Times-New-Roman) 200.0 0.0 true true 0 (70K)]
] -66.7 MRshow
1.000 UL
LTb
860 1040 M
0 63 V
0 2976 R
0 -63 V
stroke
860 840 M
[ [(Times-New-Roman) 200.0 0.0 true true 0 ( 0)]
] -66.7 MCshow
1.000 UL
LTb
1625 1040 M
0 63 V
0 2976 R
0 -63 V
stroke
1625 840 M
[ [(Times-New-Roman) 200.0 0.0 true true 0 ( 20)]
] -66.7 MCshow
1.000 UL
LTb
2389 1040 M
0 63 V
0 2976 R
0 -63 V
stroke
2389 840 M
[ [(Times-New-Roman) 200.0 0.0 true true 0 ( 40)]
] -66.7 MCshow
1.000 UL
LTb
3154 1040 M
0 63 V
0 2976 R
0 -63 V
stroke
3154 840 M
[ [(Times-New-Roman) 200.0 0.0 true true 0 ( 60)]
] -66.7 MCshow
1.000 UL
LTb
3918 1040 M
0 63 V
0 2976 R
0 -63 V
stroke
3918 840 M
[ [(Times-New-Roman) 200.0 0.0 true true 0 ( 80)]
] -66.7 MCshow
1.000 UL
LTb
4683 1040 M
0 63 V
0 2976 R
0 -63 V
stroke
4683 840 M
[ [(Times-New-Roman) 200.0 0.0 true true 0 ( 100)]
] -66.7 MCshow
1.000 UL
LTb
5448 1040 M
0 63 V
0 2976 R
0 -63 V
stroke
5448 840 M
[ [(Times-New-Roman) 200.0 0.0 true true 0 ( 120)]
] -66.7 MCshow
1.000 UL
LTb
6212 1040 M
0 63 V
0 2976 R
0 -63 V
stroke
6212 840 M
[ [(Times-New-Roman) 200.0 0.0 true true 0 ( 140)]
] -66.7 MCshow
1.000 UL
LTb
6977 1040 M
0 63 V
0 2976 R
0 -63 V
stroke
6977 840 M
[ [(Times-New-Roman) 200.0 0.0 true true 0 ( 160)]
] -66.7 MCshow
1.000 UL
LTb
7359 1040 M
-63 0 V
stroke
7479 1040 M
[ [(Times-New-Roman) 200.0 0.0 true true 0 ( 0)]
] -66.7 MLshow
1.000 UL
LTb
7359 1547 M
-63 0 V
stroke
7479 1547 M
[ [(Times-New-Roman) 200.0 0.0 true true 0 ( 100)]
] -66.7 MLshow
1.000 UL
LTb
7359 2053 M
-63 0 V
stroke
7479 2053 M
[ [(Times-New-Roman) 200.0 0.0 true true 0 ( 200)]
] -66.7 MLshow
1.000 UL
LTb
7359 2560 M
-63 0 V
stroke
7479 2560 M
[ [(Times-New-Roman) 200.0 0.0 true true 0 ( 300)]
] -66.7 MLshow
1.000 UL
LTb
7359 3066 M
-63 0 V
stroke
7479 3066 M
[ [(Times-New-Roman) 200.0 0.0 true true 0 ( 400)]
] -66.7 MLshow
1.000 UL
LTb
7359 3573 M
-63 0 V
stroke
7479 3573 M
[ [(Times-New-Roman) 200.0 0.0 true true 0 ( 500)]
] -66.7 MLshow
1.000 UL
LTb
7359 4079 M
-63 0 V
stroke
7479 4079 M
[ [(Times-New-Roman) 200.0 0.0 true true 0 ( 600)]
] -66.7 MLshow
1.000 UL
LTb
1.000 UL
LTb
860 4079 N
0 -3039 V
6499 0 V
0 3039 V
-6499 0 V
Z stroke
LCb setrgbcolor
160 2559 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Times-New-Roman) 200.0 0.0 true true 0 (Request per Second \(#/s\))]
] -66.7 MCshow
grestore
LTb
LCb setrgbcolor
8178 2559 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Times-New-Roman) 200.0 0.0 true true 0 (# of Table Slices \(#\))]
] -66.7 MCshow
grestore
LTb
LCb setrgbcolor
4109 540 M
[ [(Times-New-Roman) 200.0 0.0 true true 0 (TimeStamp \(s\))]
] -66.7 MCshow
LTb
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT1
LCb setrgbcolor
2095 163 M
[ [(Times-New-Roman) 200.0 0.0 true true 0 (Creates/Second)]
] -66.7 MRshow
LT1
2215 163 M
543 0 V
860 1040 M
191 164 V
191 2214 V
191 7 V
192 19 V
191 9 V
191 -20 V
191 46 V
191 -4 V
191 -13 V
191 -38 V
192 47 V
191 -468 V
191 468 V
191 -33 V
191 -35 V
3918 1040 L
191 1726 V
192 1033 V
191 129 V
191 26 V
191 11 V
191 78 V
191 -16 V
192 -28 V
191 55 V
191 4 V
191 -46 V
191 12 V
191 15 V
191 -33 V
6786 2833 L
6977 1463 L
191 -423 V
191 39 V
860 1040 Crs
1051 1204 Crs
1242 3418 Crs
1433 3425 Crs
1625 3444 Crs
1816 3453 Crs
2007 3433 Crs
2198 3479 Crs
2389 3475 Crs
2580 3462 Crs
2771 3424 Crs
2963 3471 Crs
3154 3003 Crs
3345 3471 Crs
3536 3438 Crs
3727 3403 Crs
3918 1040 Crs
4109 2766 Crs
4301 3799 Crs
4492 3928 Crs
4683 3954 Crs
4874 3965 Crs
5065 4043 Crs
5256 4027 Crs
5448 3999 Crs
5639 4054 Crs
5830 4058 Crs
6021 4012 Crs
6212 4024 Crs
6403 4039 Crs
6594 4006 Crs
6786 2833 Crs
6977 1463 Crs
7168 1040 Crs
7359 1079 Crs
2486 163 Crs
% End plot #1
% Begin plot #2
1.000 UP
1.000 UL
LT4
LCb setrgbcolor
4558 163 M
[ [(Times-New-Roman) 200.0 0.0 true true 0 (Local Splits)]
] -66.7 MRshow
LT4
4678 163 M
543 0 V
860 1040 M
191 96 V
191 1920 V
191 106 V
192 -142 V
191 183 V
191 -107 V
191 -35 V
191 -132 V
191 329 V
191 -106 V
192 -66 V
191 -334 V
191 329 V
191 -81 V
191 203 V
3918 1040 L
191 588 V
192 673 V
191 5 V
191 71 V
191 112 V
191 303 V
191 158 V
192 187 V
191 233 V
191 -228 V
191 461 V
191 -147 V
191 263 V
191 56 V
6786 2646 L
6977 1430 L
191 -390 V
191 35 V
860 1040 BoxF
1051 1136 BoxF
1242 3056 BoxF
1433 3162 BoxF
1625 3020 BoxF
1816 3203 BoxF
2007 3096 BoxF
2198 3061 BoxF
2389 2929 BoxF
2580 3258 BoxF
2771 3152 BoxF
2963 3086 BoxF
3154 2752 BoxF
3345 3081 BoxF
3536 3000 BoxF
3727 3203 BoxF
3918 1040 BoxF
4109 1628 BoxF
4301 2301 BoxF
4492 2306 BoxF
4683 2377 BoxF
4874 2489 BoxF
5065 2792 BoxF
5256 2950 BoxF
5448 3137 BoxF
5639 3370 BoxF
5830 3142 BoxF
6021 3603 BoxF
6212 3456 BoxF
6403 3719 BoxF
6594 3775 BoxF
6786 2646 BoxF
6977 1430 BoxF
7168 1040 BoxF
7359 1075 BoxF
4949 163 BoxF
% End plot #2
% Begin plot #3
1.000 UP
1.000 UL
LT2
LCb setrgbcolor
7021 163 M
[ [(Times-New-Roman) 200.0 0.0 true true 0 (Remote Splits)]
] -66.7 MRshow
LT2
7141 163 M
543 0 V
860 1040 M
191 0 V
191 0 V
191 0 V
192 0 V
191 0 V
191 0 V
191 0 V
191 0 V
191 0 V
191 0 V
192 0 V
191 0 V
191 0 V
191 0 V
191 0 V
191 0 V
191 1008 V
192 370 V
191 -162 V
191 -228 V
191 -107 V
191 -136 V
191 -168 V
192 -162 V
191 -172 V
191 -56 V
191 31 V
191 -86 V
191 -81 V
191 -10 V
192 -36 V
191 -5 V
191 0 V
191 0 V
860 1040 Star
1051 1040 Star
1242 1040 Star
1433 1040 Star
1625 1040 Star
1816 1040 Star
2007 1040 Star
2198 1040 Star
2389 1040 Star
2580 1040 Star
2771 1040 Star
2963 1040 Star
3154 1040 Star
3345 1040 Star
3536 1040 Star
3727 1040 Star
3918 1040 Star
4109 2048 Star
4301 2418 Star
4492 2256 Star
4683 2028 Star
4874 1921 Star
5065 1785 Star
5256 1617 Star
5448 1455 Star
5639 1283 Star
5830 1227 Star
6021 1258 Star
6212 1172 Star
6403 1091 Star
6594 1081 Star
6786 1045 Star
6977 1040 Star
7168 1040 Star
7359 1040 Star
7412 163 Star
% End plot #3
1.000 UL
LTb
860 4079 N
0 -3039 V
6499 0 V
0 3039 V
-6499 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-New-Roman
